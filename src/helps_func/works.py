from datetime import datetime, timedelta
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from create import bot
from keyboards import reply, inline
from googleapiclient.errors import HttpError
from create import db
from helps_func import sheets_api
from states import states


class dotdict(dict):
    """dot.notation access to dictionary attributes"""
    __getattr__ = dict.get
    __setattr__ = dict.__setitem__
    __delattr__ = dict.__delitem__


# ID —Ä–µ—Ñ–µ—Ä–∞
def extract_unique_code(text):
    return text.split()[1] if len(text.split()) > 1 else None


async def welc(message):
    name = message.from_user.first_name
    await send(message.from_user.id, '–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫ ' + name + ', –≤—ã –Ω–∞—á–∏–Ω–∞–µ—Ç–µ —Ä–∞–±–æ—Ç—É —Å Telegram –±–æ—Ç–æ–º, –ø–æ –≤–µ–¥–µ–Ω–∏—é —É—á–µ—Ç–∞ –≤–∞—à–∏—Ö –¥–æ—Ö–æ–¥–æ–≤/—Ä–∞—Å—Ö–æ–¥–æ–≤. ', reply.main_kb())
    await use_help(message)
    # subscription = db.get_sub_user(message.chat.id)
    # markup = types.InlineKeyboardMarkup()
    # but1 = types.InlineKeyboardButton(text='–î–∞', callback_data='trial')
    # markup.add(but1)
    # if subscription[0][0] == 'no_subscription':
    #     await send(message.from_user.id, name + ', –≤—ã –Ω–µ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É. –•–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥?', markup)


async def send(who, text, markup=False):
    # try:
        if markup == 'menu':
            await bot.send_message(who, text, reply_markup=reply.main_kb())
        elif markup != 'menu' and markup:
            await bot.send_message(who, text, reply_markup=markup)
        else:
            await bot.send_message(who, text)
    # except Exception as e:
    #     print(f"ERR_SEND: \n{e}")
        # await send(who, text)


async def use_help(message):
    await send(message.from_user.id,
               # '–û–¥–Ω–∞ –∏–∑ –ø—Ä–∏—á–∏–Ω, –ø–æ—á–µ–º—É –±–µ–¥–Ω—ã–µ –±–µ–¥–Ω–µ—é—Ç - –æ–Ω–∏ –Ω–µ –≤–µ–¥—É—Ç —É—á–µ—Ç. (–ò–≥–æ—Ä—å –†—ã–±–∞–∫–æ–≤). –ö–æ–≥–¥–∞ –º—ã –≤–µ–¥–µ–º —É—á–µ—Ç –Ω–∞—à–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è, –º—ã –º–æ–∂–µ–º –∑–∞–º–µ—Ç–∏—Ç—å –Ω–∞—à–∏ —Å–ª–∞–±—ã–µ –º–µ—Å—Ç–∞ –≤ —Ç—Ä–∞—Ç–µ –¥–µ–Ω–µ–≥.\n\n'
               'üôå<b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–æ–º (–ø–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫–∞—Ü–∏—è –Ω–∏–∂–µ)</b>üôå\n–î–∞–Ω–Ω—ã–π –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å google —Ç–∞–±–ª–∏—Ü–∞–º–∏. \n\n–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã '
               '–≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ: \n‚úÖ –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é <a href="https://docs.google.com/spreadsheets/u/0/">google sheets —Ç–∞–±–ª–∏—Ü—É</a> (–∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –∏–∑ –≤–∞—à–∏—Ö —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö) '
               '\n‚úÖ –†–∞–∑—Ä–µ—à–∏—Ç—å —á—Ç–µ–Ω–∏–µ –∏ –∑–∞–ø–∏—Å—å –∞–∫–∫–∞—É–Ω—Ç—É <code>servis@new-project-336414.iam.gserviceaccount.com</code> (—ç—Ç–æ –±–æ—Ç).'
               '\n‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –±–æ—Ç—É —Ç–∞–∫–æ–≥–æ –≤–∏–¥–∞:\n<code>/add_tables </code>\n\n'
               '–ë–æ—Ç —Å–∞–º —Å–æ–∑–¥–∞—Å—Ç –ª–∏—Å—Ç—ã <b>"–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ä–∞–∑–¥–µ–ª—ã"</b> –∏ <b>"–ó–∞–ø–∏—Å–∏ –±–æ—Ç–∞".</b> –ù–∞ –ª–∏—Å—Ç <b>"–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ä–∞–∑–¥–µ–ª—ã"</b> '
               '–±—É–¥—É—Ç –≤–Ω–µ—Å–µ–Ω—ã –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ä–∞–∑–¥–µ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —É–¥–∞–ª—è—Ç—å, –¥–æ–±–∞–≤–ª—è—Ç—å.\n\n'
               '–î–∞–ª–µ–µ, –ø—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã —Ç–∞–∫–æ–≤: –≤—ã –≤–≤–æ–¥–∏—Ç–µ <u>–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</u> (–∏–ª–∏ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ), –∑–∞—Ç–µ–º <u>—Å—É–º–º—É</u>, '
               '–∞ –∑–∞—Ç–µ–º <u>–ø—Ä–∏–º–µ—á–∞–Ω–∏–µ</u> (–µ—Å–ª–∏ –µ—Å—Ç—å). –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ "-–∫". –ü—Ä–∏–º–µ—Ä:\n'
               '‚úÖ <b>–∑–ø 10000 -–∫ –∞–≤–∞–Ω—Å</b>\n‚úÖ <b>–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è 123000</b>\n\n'
               '–ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –≤–∞–º–∏ —Å–ª–æ–≤–æ –Ω–µ–∑–Ω–∞–∫–æ–º–æ –±–æ—Ç—É (–µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö –∏ –≤ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤–∞—Ö), '
               '–±–æ—Ç –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –≤–∞–º –¥–æ–±–∞–≤–∏—Ç—å —ç—Ç–æ —Å–ª–æ–≤–æ –ª–∏–±–æ –∫–∞–∫ <u>–∫–∞—Ç–µ–≥–æ—Ä–∏—é</u>, –ª–∏–±–æ –∫–∞–∫ <u>–∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ</u>. –£ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'
               ' –º–æ–∂–µ—Ç –±—ã—Ç—å <u>–ª—é–±–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ</u> –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤. –û–Ω–∏ —É–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –≤ –ª–∏—Å—Ç–µ <b>"–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ä–∞–∑–¥–µ–ª—ã"</b> '
               '–≤ —Å—Ç–æ–ª–±—Ü–µ <b>"–°"</b> —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –∏ –ø—Ä–æ–±–µ–ª.\n\n'
               '–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é, –±–æ—Ç —Å–æ–∑–¥–∞–µ—Ç 4 —Ä–∞–∑–¥–µ–ª–∞ <b>(–î–æ—Ö–æ–¥—ã, –ñ–µ–ª–∞–Ω–∏—è, –†–∞—Å—Ö–æ–¥—ã –ø–æ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞–º, –ü–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å)</b>, '
               '–Ω–æ –∏—Ö <u>–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å</u>. –¢–∞–∫–∂–µ, –º–æ–∂–Ω–æ <u>–¥–æ–±–∞–≤–ª—è—Ç—å –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∏ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞</u>. –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ '
               '–∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å <u>–ø—Ä—è–º–∏–∫–æ–º –∏–∑ –±–æ—Ç–∞</u>.\n\n'
               '<a href="https://telegra.ph/Podrobnaya-instrukciya-po-ispolzovaniyu-bota-05-27-2">–û—á–µ–Ω—å –ø–æ–¥—Ä–æ–±–Ω–æ –ø—Ä–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞ (–ø–æ–ª–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è)</a>\n'
               # '\n\n‚úÖ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ ‚úÖ\n–ö–æ–≥–¥–∞ –≤—ã –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ 5 —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–π–¥—É—Ç –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –∏ –∫—É–ø—è—Ç –ª—é–±—É—é –ø–æ–¥–ø–∏—Å–∫—É, –≤–∞–º –±—É–¥–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–∞ '
               # ' —Å–∫–∏–¥–∫–∞ –≤ 4Ô∏è‚É£0Ô∏è‚É£% –Ω–∞ <b>–í–°–ï</b> –ø–æ–¥–ø–∏—Å–∫–∏ –≤ —Ç–µ—á–µ–Ω–∏–∏ –≤—Å–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏! –î–ª—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤–≤–µ–¥–∏—Ç–µ /referrals\n\nüî∫üî∫ –ë—É–¥—É—â–∏–µ –ø–ª–∞–Ω—ã '
               # '—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –æ–± —ç—Ç–æ–º –±–æ—Ç–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –≤–≤–µ–¥—è –∫–æ–º–∞–Ω–¥—É /plans üî∫üî∫\n\n –í–æ–ø—Ä–æ—Å—ã –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫–µ /support\n\n '
               'üî•üî•üî•<b>–£–¥–∞—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!)</b>üî•üî•üî•')


async def set_table_prod(message, val=None):
    try:
        table = db.get_temp_info(message.from_user.id)
        await send(message.from_user.id, '–î–∞–π—Ç–µ –±–æ—Ç—É –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ª–∏—Å—Ç–æ–≤ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∏—Ö –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π)')
        try:
            await sheets_api.create_table(table.split('; ')[1], val)
        except HttpError as e:
            if 'not have permission' in str(e):
                await send(message, '–í—ã –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–≤–∏–ª–∏ –±–æ—Ç—É –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã!\n'
                                                 '<u>servis@new-project-336414.iam.gserviceaccount.com</u>', markup='menu')
                return
            elif 'add alternating background colors' in str(e):
                pass
            else:
                await send(message, '–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–∞—à–µ–π —Å—Å—ã–ª–∫–∏.', markup='menu')
                return

        if table.split('; ')[0] == 'table_number: 2':
            db.update_link_table2(message.from_user.id, table.split('; ')[1])
        else:
            db.update_link_table(message.from_user.id, table.split('; ')[1])
        await send(message.from_user.id, '–û—Ç–ª–∏—á–Ω–æ, –≤–∞—à–∞ google —Ç–∞–±–ª–∏—Ü–∞ –±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞!', markup='menu')
        await my_category(message)
    except IndexError:
        await send(message.from_user.id, '‚ùóÔ∏è–í—ã –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω—É—é —Å—Å—ã–ª–∫—É.‚ùóÔ∏è\nhttps://docs.google.com/spreadsheets/d/..../edit/...\n'
                                         '–ì–¥–µ –º–Ω–æ–≥–æ—Ç–æ—á–∏—è - —Ç–∞–º –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã')


async def my_category(message):
    category = await sheets_api.read('–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ä–∞–∑–¥–µ–ª—ã', db.get_id_sheets(message.from_user.id), majorDimension='ROWS')
    mess = '–í–∞—à–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏/—Ä–∞–∑–¥–µ–ª—ã/–∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:'
    for el in category:
        if el:
            mess = mess + '\n' + ' - '.join(el)
    if len(mess.split('\n')) == 1:
        await send(message.from_user.id, '–í–∞—à –ª–∏—Å—Ç "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ä–∞–∑–¥–µ–ª—ã" –ø—É—Å—Ç', markup='menu')
    else:
        await send(message.from_user.id, mess, markup='menu')


async def check_comment(message):
    if '-–∫' not in message.text:  # –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∑–∞–ø–∏—Å–∏
        if message.text.split()[0].isdigit():  # –ï—Å–ª–∏ –ø–µ—Ä–≤–æ–µ —Å–ª–æ–≤–æ –≤ –∑–∞–ø–∏—Å–∏ - —á–∏—Å–ª–æ, —Ç–æ
            category = ' '.join([el for el in message.text.split()[1:]]).lower()  # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
            db.change_random('summ', message.text.split()[0], message.from_user.id)  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Å—É–º–º—É
        else:  # –ï—Å–ª–∏ –ø–µ—Ä–≤–æ–µ —Å–ª–æ–≤–æ –≤ –∑–∞–ø–∏—Å–∏ - –Ω–µ —á–∏—Å–ª–æ, –∑–Ω–∞—á–∏—Ç —Ñ–æ—Ä–º–∏—Ä—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–Ω–∞—á–µ
            category = ' '.join([el for el in message.text.split()[:-1]]).lower()  # –ï—Å–ª–∏ –Ω–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤, —Ç–æ –≤—Å–µ –∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Å—Ç—Ä–æ–∫–µ - –∫–∞—Ç–µ–≥–æ—Ä–∏—è
            db.change_random('summ', message.text.split()[-1], message.from_user.id)  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Å—É–º–º—É
        db.change_random('comment', ' ', message.from_user.id)  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –ø—É—Å—Ç–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    else:  # –ï—Å–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –µ—Å—Ç—å, —Ç–æ:
        if message.text.split()[0].isdigit():  # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å—Ç—Ä–æ–∫–∏ - —á–∏—Å–ª–æ
            category = ' '.join([el for el in message.text.split(' -–∫ ')[0].split()[1:]]).lower()  # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
            db.change_random('summ', message.text.split(' -–∫ ')[0].split()[0], message.from_user.id)  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Å—É–º–º—É
        else:
            category = ' '.join([el for el in message.text.split(' -–∫ ')[0].split()[:-1]]).lower()  # –ï—Å–ª–∏ –µ—Å—Ç—å, —Ç–æ –¥–µ–ª–∏–º —Å—Ç—Ä–æ–∫—É –Ω–∞ –ø–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é, –∞ –¥–∞–ª—å—à–µ –∫–∞–∫ –∏ –≤—ã—à–µ –Ω–∞–ø–∏—Å–∞–Ω–Ω–æ
            db.change_random('summ', message.text.split(' -–∫ ')[0].split()[-1],
                             message.from_user.id)  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Å—É–º–º—É
        db.change_random('comment', message.text.split(' -–∫ ')[-1],
                         message.from_user.id)  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –Ω–µ –ø—É—Å—Ç–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    db.change_random('category', category, message.from_user.id)  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é


async def check_sign_sum(chapter, summ):
    if chapter != '–î–æ—Ö–æ–¥—ã' and int(summ) >= 0:
        correct_sum = int(summ) * -1
    elif chapter == '–î–æ—Ö–æ–¥—ã' and int(summ) < 0:
        correct_sum = int(summ) * -1
    else:
        correct_sum = int(summ)
    return correct_sum


async def json_serial(obj):
    """JSON serializer for objects not serializable by default json code"""
    if isinstance(obj, (datetime)):
        return obj.isoformat()
    raise TypeError("Type %s not serializable" % type(obj))


async def categories_match(message, tabular_data):
    for el in tabular_data:  # –ü–µ—Ä–µ–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ —Ä–∞–∑–¥–µ–ª–æ–≤ —Å –≥—É–≥–ª —Ç–∞–±–ª–∏—Ü—ã
        if db.get_random('category', message.from_user.id) == el[1].lower():  # –ï—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è = –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã, —Ç–æ
            db.change_random('chapter', el[0], message.from_user.id)  # –í –ø–æ–ª–µ "–†–∞–∑–¥–µ–ª—ã" –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–∞–∑–¥–µ–ª
            try:
                db.change_random('summ',
                                 await check_sign_sum(el[0], db.get_random('summ', message.from_user.id)),
                                 message.from_user.id)  # –ú–µ–Ω—è–µ–º —á–∏—Å–ª–æ–≤–æ–π –∑–Ω–∞–∫ —Å—É–º–º–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–∑–¥–µ–ª–∞ (–†–∞—Å—Ö–æ–¥—ã –∏–ª–∏ –î–æ—Ö–æ–¥—ã)
            except ValueError as e:
                if 'int() with base 10' in str(e):  # –ï—Å–ª–∏ –±—ã–ª–∞ –ø–µ—Ä–µ–¥–∞–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—É–º–º–∞
                    await send(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É", markup='menu')
            else:  # –í—ã–ø–æ–ª–Ω–∏—Ç—Å—è, –µ—Å–ª–∏ –≤—Å–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
                try:
                    await sheets_api.write(str(await json_serial(datetime.now())),
                                           str(db.get_random('name', message.from_user.id)),
                                           db.get_random('chapter', message.from_user.id).capitalize(),
                                           db.get_random('category', message.from_user.id).capitalize(),
                                           str(db.get_random('summ', message.from_user.id)),
                                           db.get_random('comment', message.from_user.id), '–ó–∞–ø–∏—Å–∏ –±–æ—Ç–∞',
                                           db.get_id_sheets(message.from_user.id)) # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –≥—É–≥–ª —Ç–∞–±–ª–∏—Ü—É
                except HttpError as e:
                    if 'Unable to parse range: –ó–∞–ø–∏—Å–∏ –±–æ—Ç–∞' in str(e):
                        await send(message.from_user.id, '‚ùóÔ∏è–ù–µ —É–¥–∞–ª–æ—Å—å –≤–Ω–µ—Å—Ç–∏ –∑–∞–ø–∏—Å—å.‚ùóÔ∏è\n –í–æ–∑–º–æ–∂–Ω–æ –≤—ã —É–¥–∞–ª–∏–ª–∏ –∏–ª–∏ '
                                                         '–ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–ª–∏ –ª–∏—Å—Ç <b>–ó–∞–ø–∏—Å–∏ –±–æ—Ç–∞</b>. –õ–∏–±–æ –ø–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ (—Å–æ–∑–¥–∞–π—Ç–µ) —ç—Ç–æ—Ç –ª–∏—Å—Ç, '
                                                         '–ª–∏–±–æ –∑–∞–Ω–æ–≤–æ –¥–æ–±–∞–≤—å—Ç–µ —Ç–∞–±–ª–∏—Ü—É, –±–æ—Ç —Å–∞–º —Å–æ–∑–¥–∞—Å—Ç –ª–∏—Å—Ç <b>–ó–∞–ø–∏—Å–∏ –±–æ—Ç–∞</b> \n'
                                                         '<u>–í–≤–µ–¥–∏—Ç–µ /add_tables –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏</u>')
                        db.change_random('is_stop', 1, message.from_user.id) # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –≤–≤–æ–¥–∞
                        return
                comment = db.get_random("comment", message.from_user.id) if db.get_random("comment", message.from_user.id) != " " else "–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è"
                await send(message.from_user.id, '–†–∞–∑–¥–µ–ª: ' + db.get_random('chapter', message.from_user.id) + '\n' 
                                                 '–ö–∞—Ç–µ–≥–æ—Ä–∏—è: ' + db.get_random('category', message.from_user.id) + '\n' 
                                                 f'–°—É–º–º–∞: {db.get_random("summ", message.from_user.id):,} ‚ÇΩ \n' 
                                                 '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ' + comment + '\n'
                                                 '–ó–∞–ø–∏—Å–∞–Ω–æ –≤ —Ç–∞–±–ª–∏—Ü—É!', markup='menu')
            db.change_random('is_stop', 1, message.from_user.id) # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –≤–≤–æ–¥–∞
            return


async def key_words_match(message, tabular_data):
    for el in tabular_data:
        if len(el) == 3:
            if db.get_random('category', message.from_user.id) in [element.lower() for element in el[2].split(', ')]: # –ï—Å—Ç—å –ª–∏ –≤–≤–µ–¥–µ–Ω–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –≤ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤–∞—Ö —Ç–∞–±–ª–∏—Ü—ã
                db.change_random('chapter', el[0].capitalize(), message.from_user.id) # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Ä–∞–∑–¥–µ–ª
                try:
                    db.change_random('summ',
                                     await check_sign_sum(db.get_random('chapter', message.from_user.id), db.get_random('summ', message.from_user.id)),
                                     message.from_user.id)  # –ú–µ–Ω—è–µ–º —á–∏—Å–ª–æ–≤–æ–π –∑–Ω–∞–∫ —Å—É–º–º–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–∑–¥–µ–ª–∞ (–†–∞—Å—Ö–æ–¥—ã –∏–ª–∏ –î–æ—Ö–æ–¥—ã)
                except ValueError as e:
                    if 'int() with base 10' in str(e):  # –ï—Å–ª–∏ –±—ã–ª–∞ –ø–µ—Ä–µ–¥–∞–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—É–º–º–∞
                        await send(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É", markup='menu')
                else:
                    comment = db.get_random('category', message.from_user.id) if db.get_random('comment', message.from_user.id) == ' ' else db.get_random('comment', message.from_user.id) # –ï—Å–ª–∏ –Ω–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è, —Ç–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å—Ç–∞–Ω–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º
                    db.change_random('category', el[1].capitalize(), message.from_user.id) # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
                    try:
                        await sheets_api.write(str(await json_serial(datetime.now())),
                                               str(db.get_random('name', message.from_user.id)),
                                               db.get_random('chapter', message.from_user.id).capitalize(),
                                               db.get_random('category', message.from_user.id).capitalize(),
                                               str(db.get_random('summ', message.from_user.id)),
                                               comment, '–ó–∞–ø–∏—Å–∏ –±–æ—Ç–∞',
                                               db.get_id_sheets(message.from_user.id))  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –≥—É–≥–ª —Ç–∞–±–ª–∏—Ü—É
                    except HttpError as e:
                        if 'Unable to parse range: –ó–∞–ø–∏—Å–∏ –±–æ—Ç–∞' in str(e):
                            await send(message.from_user.id,
                                       '‚ùóÔ∏è–ù–µ —É–¥–∞–ª–æ—Å—å –≤–Ω–µ—Å—Ç–∏ –∑–∞–ø–∏—Å—å.‚ùóÔ∏è\n –í–æ–∑–º–æ–∂–Ω–æ –≤—ã —É–¥–∞–ª–∏–ª–∏ –∏–ª–∏ '
                                       '–ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–ª–∏ –ª–∏—Å—Ç <b>–ó–∞–ø–∏—Å–∏ –±–æ—Ç–∞</b>. –õ–∏–±–æ –ø–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ (—Å–æ–∑–¥–∞–π—Ç–µ) —ç—Ç–æ—Ç –ª–∏—Å—Ç, '
                                       '–ª–∏–±–æ –∑–∞–Ω–æ–≤–æ –¥–æ–±–∞–≤—å—Ç–µ —Ç–∞–±–ª–∏—Ü—É, –±–æ—Ç —Å–∞–º —Å–æ–∑–¥–∞—Å—Ç –ª–∏—Å—Ç <b>–ó–∞–ø–∏—Å–∏ –±–æ—Ç–∞</b> \n'
                                       '<u>–í–≤–µ–¥–∏—Ç–µ /add_tables –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏</u>')
                        db.change_random('is_stop', 1, message.from_user.id) # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –≤–≤–æ–¥–∞
                        return

                    await send(message.from_user.id, '–†–∞–∑–¥–µ–ª: ' + db.get_random('chapter', message.from_user.id) + '\n' 
                                             '–ö–∞—Ç–µ–≥–æ—Ä–∏—è: ' + db.get_random('category', message.from_user.id) + '\n' 
                                             f'–°—É–º–º–∞: {db.get_random("summ", message.from_user.id):,} ‚ÇΩ\n' 
                                             '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ' + comment + '\n'
                                             '–ó–∞–ø–∏—Å–∞–Ω–æ –≤ —Ç–∞–±–ª–∏—Ü—É!', markup='menu')
                db.change_random('is_stop', 1, message.from_user.id) # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –≤–≤–æ–¥–∞
                return


'''
db.change_random('what', '', message.from_user.id)
        db.change_random('summ', 0, message.from_user.id)
        db.change_random('name', message.from_user.first_name, message.from_user.id)
        db.change_random('chapter', '', message.from_user.id) # rz
        db.change_random('category', '', message.from_user.id) # ct
        db.change_random('comment', '', message.from_user.id) # km
        db.change_random('string', '', message.from_user.id)
        db.change_random('time_v', '', message.from_user.id)
'''


async def fuzzy_comparison(message: Message, tabular_data: list, state: FSMContext):
    variants = []
    # –î–µ–ª–∞–µ–º –Ω–µ—á–µ—Ç–∫–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ, –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –≤–∞—Ä–∏–∞–Ω—Ç—ã
    for el in tabular_data[1:]:
        if db.get_random('category', message.from_user.id) in el[1].lower(): # –ù–µ—á–µ—Ç–∫–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
            variants.append(
                f'{el[1]} {db.get_random("summ", message.from_user.id)} '
                f'{" -–∫ " + db.get_random("comment", message.from_user.id) if db.get_random("comment", message.from_user.id) != " " else ""}'
            )
        if len(el) == 3 and db.get_random('category', message.from_user.id) in el[2].lower():  # –ù–µ—á–µ—Ç–∫–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
            variants.append(
                f'{el[1]} {db.get_random("summ", message.from_user.id)} '
                f'{" -–∫ " + db.get_random("comment", message.from_user.id) if db.get_random("comment", message.from_user.id) != " " else ""}'
            )
        if db.get_random('category', message.from_user.id) in el[0].lower():  # –ù–µ—á–µ—Ç–∫–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º
            for chapter in tabular_data[1:]:
                if chapter[0].lower() == el[0].lower():
                    variants.append(
                        f'{chapter[1]} {db.get_random("summ", message.from_user.id)} '
                        f'{" -–∫ " + db.get_random("comment", message.from_user.id) if db.get_random("comment", message.from_user.id) != " " else ""}'
                    )
    # –ï—Å–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏–∑ –Ω–µ—á–µ—Ç–∫–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –µ—Å—Ç—å, —Ç–æ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    variants = list(set(variants))
    if len(variants) > 0:
        await send(message.from_user.id, '–í–æ–∑–º–æ–∂–Ω–æ –≤—ã –∏–º–µ–ª–∏ –≤ –≤–∏–¥—É:', markup=reply.auto_markup(variants))
        await state.set_state(states.New_Key_Word.new_key_word) # –ó–∞–ø—É—Å–∫ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
    else: # –ï—Å–ª–∏ –Ω–µ—Ç –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —É –Ω–µ—á–µ—Ç–∫–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–Ω–µ—Å—Ç–∏ —Å–ª–æ–≤–æ –≤ –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–ª–∏ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ
        await continuation(message, state)


# –í—ã–∑—ã–≤–∞–µ—Ç—Å—è, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–ª–∏ –µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–µ—á–µ—Ç–∫–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
async def continuation(message, state):
    try:
        await state.set_state(states.Write_Keys.step_one)
        await send(
            message.from_user.id,
            f'–î–æ–±–∞–≤–∏—Ç—å "{db.get_random("category", message.from_user.id)}" –∫–∞–∫ –Ω–æ–≤–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –∏–ª–∏ –∫–∞–∫ –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é? ',
            markup=reply.new_category()
        )
        db.change_random("string", db.get_random("category", message.from_user.id), message.from_user.id)
    except Exception as e:
        print(e)
        await send(message.from_user.id, "–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—â–µ —Ä–∞–∑")


async def analytics(message):
    try:
        if db.get_id_sheets(message.from_user.id) and db.get_id_sheets(message.from_user.id) != 'none': # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —é–∑–µ—Ä —É–∫–∞–∑–∞–ª —Å—Å—ã–ª–∫—É –Ω–∞ GOOGLE SHEETS
            tb_name = await sheets_api.table(db.get_id_sheets(message.from_user.id)) # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ç–∞–±–ª–∏—Ü—É
            await send(message.from_user.id, message.from_user.first_name + ", –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –≤–∞—à–∏—Ö –∑–∞–ø–∏—Å–µ–π –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.‚è≥ –ö–æ–≥–¥–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –æ–∫–æ–Ω—á–∏—Ç—Å—è, "
                                                                            " –±–æ—Ç –ø—Ä–∏—à–ª–µ—Ç –≤–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —ç—Ç–æ–º. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ—è–≤—è—Ç—Å—è –≤ –≤–∞—à–µ–π —Ç–∞–±–ª–∏—Ü–µ –Ω–∞ –ª–∏—Å—Ç–µ <b>–ê–Ω–∞–ª–∏—Ç–∏–∫–∞</b>. ")
            await message.answer_sticker(r'CAACAgIAAxkBAAEE0-9ij8pvp5_JRLKwrhvusHiZpP2XTAACIwADKA9qFCdRJeeMIKQGJAQ', reply_markup=inline.delete_sticker())
            id_sh = db.get_id_sheets(message.from_user.id) # –ü–æ–ª—É—á–µ–Ω–∏–µ id google sheets —é–∑–µ—Ä–∞
            result = await sheets_api.analytic(id_sh)
            if result == 'ok':
                await send(message.from_user.id, "‚úÖ–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ï—ë –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ <a href='" + tb_name[1] + "'>–≤ —Å–≤–æ–µ–π google sheets —Ç–∞–±–ª–∏—Ü–µ</a> –Ω–∞ –ª–∏—Å—Ç–µ <b>–ê–Ω–∞–ª–∏—Ç–∏–∫–∞</b>")
            else: await send(message.from_user.id, result)
        else:
            await send(message.from_user.id, '–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Ç–∞–±–ª–∏—Ü—É google sheets.\n'
                                                   '–ß—Ç–æ–±—ã —É–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –∑–∞–ø–∏—Å–µ–π –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /add_tables')
    except Exception as e:
        if 'Requested entity was not found' in str(e):
            await send(message.from_user.id, '‚ùóÔ∏è–í–æ–∑–º–æ–∂–Ω–æ, –≤–∞—à–∞ —Ç–∞–ª–∏—Ü–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞. ‚ùóÔ∏è\n–ó–∞–¥–∞–π—Ç–µ –±–æ—Ç—É –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É. \n'
                                             '–ü–æ–¥—Ä–æ–±–Ω–µ–µ - /add_tables')
            return
        if 'not have permission' in str(e):
            await send(message.from_user.id,
                       '–í—ã –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–≤–∏–ª–∏ –±–æ—Ç—É –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã!\n'
                       '<u>servis@new-project-336414.iam.gserviceaccount.com</u>')
            return
        await send(message.from_user.id, '–í—ã—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ, –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É /support')
        print('Error analytic: ', e)