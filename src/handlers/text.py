from datetime import datetime

from create import bot, db
from helps_func.works import send, my_category, check_comment, check_sign_sum, json_serial, categories_match, key_words_match, fuzzy_comparison
from keyboards import inline
from helps_func import sheets_api
from googleapiclient.errors import HttpError


# –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def handler(message, state): # todo
    if message.text == '–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞üí∞':
        await send(message.from_user.id, '–ë–æ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –±–µ—Å–ø–ª–∞—Ç–µ–Ω –¥–ª—è –≤—Å–µ—Ö –∂–µ–ª–∞—é—â–∏—Ö, –ø–æ—ç—Ç–æ–º—É –≤–∞—à –≤–∫–ª–∞–¥ –≤ –Ω–µ–≥–æ –æ—á–µ–Ω—å –∑–Ω–∞—á–∏–º.üíØ\n\n'
                               f"<a href='https://www.donationalerts.com/r/pvkolosov'>–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª—é–±—É—é —Å—É–º–º—É, –Ω–∞–∂–∞–≤ –Ω–∞ —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç</a>", 'menu')
    elif db.get_id_sheets(message.from_user.id) and db.get_id_sheets(message.from_user.id) != 'none':
        if message.text == '–£–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–ø–∏—Å—å':
            await delete_entry(message)
        elif message.text == '–ò–∑–º–µ–Ω–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é':
            await change_table(message)
        elif message.text == '–ò—Ç–æ–≥–æ –∑–∞ –º–µ—Å—è—Ü':
            await month(message)
        elif message.text == '–ú–æ–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ä–∞–∑–¥–µ–ª—ã':
            await my_category(message)
        elif message.text == '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –∑–∞–ø–∏—Å–µ–π':
            await thirty_entries(message)
        elif message.text == '–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏':
            pass
        else: # –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ä–∞—Å—Ö–æ–¥–∞–º–∏/–¥–æ—Ö–æ–¥–∞–º–∏
            if len(message.text.split()) > 1:
                await add_new_entry(message, state)
            else:
                await send(message.from_user.id, '–°–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –æ–¥–Ω–æ–≥–æ —Å–ª–æ–≤–∞ –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è. –ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—Ç–µ, –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –ø–æ–º–æ—â—å—é /help', markup='menu')
    else:
        await send(message.from_user.id, '–í—ã –Ω–µ –∑–∞–¥–∞–ª–∏ —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –∑–∞–ø–∏—Å–µ–π. –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:\n/add_tables')

async def month(message):
    now = str(datetime.now()) #
    mes = now.split()[0].split('-')[1]

    sheet = await sheets_api.read('–ó–∞–ø–∏—Å–∏ –±–æ—Ç–∞', db.get_id_sheets(message.from_user.id), 'ROWS')
    estimation = [int(cost[6]) for cost in sheet[1:] if int(cost[0].split('-')[1]) == int(mes)]
    if not len(estimation):
        await send(message.from_user.id,
                   '–í —ç—Ç–æ–º –º–µ—Å—è—Ü–µ –Ω–µ –¥–µ–ª–∞–ª–∏ –∑–∞–ø–∏—Å–µ–π, –ø–æ—ç—Ç–æ–º—É –Ω–µ –º–æ–≥—É –Ω–∏—á–µ–≥–æ —Å–∫–∞–∑–∞—Ç—åü§∑‚Äç‚ôÇÔ∏è', markup='menu')
        return
    summ = sum(estimation)
    await send(message.from_user.id, f'–í —ç—Ç–æ–º –º–µ—Å—è—Ü–µ {"—Ä–∞—Å—Ö–æ–¥—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –¥–æ—Ö–æ–¥—ã" if summ < 0 else "–¥–æ—Ö–æ–¥—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ —Ä–∞—Å—Ö–æ–¥—ã" if summ > 0 else "–¥–æ—Ö–æ–¥—ã —Ä–æ–≤–Ω–æ –ø–æ–∫—Ä—ã–ª–∏ —Ä–∞—Å—Ö–æ–¥—ã"}.\n–ò—Ç–æ–≥–æ –∑–∞ –º–µ—Å—è—Ü: {summ:,} ‚ÇΩ', markup='menu')


async def change_table(message):
    tbl = await db.get_two_sheets(message.from_user.id)
    if not db.get_id_sheets(message.from_user.id):
        await send(message.from_user.id,
                   '–í—ã –Ω–µ –∑–∞–¥–∞–ª–∏ –Ω–∏ –æ–¥–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã. –î–æ–±–∞–≤—å—Ç–µ –æ—Å–Ω–æ–≤–Ω—É—é —Ç–∞–±–ª–∏—Ü—É /set_table', markup='menu')
    elif not tbl:
        await send(message.from_user.id,
                   '–£ –≤–∞—Å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤—Ç–æ—Ä—É—é, –Ω–∞–∂–º–∏—Ç–µ: /add_table_two', markup='menu')
    else:
        tbl1 = await sheets_api.table(db.get_sheets_one(message.from_user.id))
        tbl2 = await sheets_api.table(await db.get_two_sheets(message.from_user.id))

        await send(message.from_user.id, '–ö–∞–∫—É—é —Ç–∞–±–ª–∏—Ü—É –≤—ã–±–∏—Ä–∞–µ—Ç–µ? –ë–æ—Ç –±—É–¥–µ—Ç –¥–µ–ª–∞—Ç—å –∑–∞–ø–∏—Å–∏ –∏ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ', markup=inline.selection_sheets(tbl1[0], tbl2[0]))

async def delete_entry(message):
    sheet = await sheets_api.read('–ó–∞–ø–∏—Å–∏ –±–æ—Ç–∞', db.get_id_sheets(message.from_user.id), 'ROWS')
    if len(sheet) != 1:
        r = sheet[-1]
        await sheets_api.clear('–ó–∞–ø–∏—Å–∏ –±–æ—Ç–∞', db.get_id_sheets(message.from_user.id))
        await send(message.from_user.id,
                   '–ó–∞–ø–∏—Å—å\n' + r[0] + ', ' + r[3] + ', ' + r[4] + ', ' + r[5] + ', ' + r[6] + '\n—É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞', markup='menu')
        del sheet, r
    else:
        await send(message.from_user.id, '–í –≤–∞—à–µ–π —Ç–∞–±–ª–∏—Ü–µ –ø—É—Å—Ç–æ, —É–¥–∞–ª—è—Ç—å –Ω–µ—á–µ–≥–æ', markup='menu')


async def thirty_entries(message):
    rd = await sheets_api.read('–ó–∞–ø–∏—Å–∏ –±–æ—Ç–∞', db.get_id_sheets(message.from_user.id), 'ROWS')
    if len(rd) != 1:
        if (len(rd) - 30) >= 0:
            msg = ''
            for i in range(len(rd) - 30, len(rd)):
                try:
                    msg += (str(i) + ") " + rd[i][0] + ', ' + rd[i][3] + ', ' + rd[i][4] + ', ' +
                            rd[i][5] + ', ' + rd[i][6] + ', ' + rd[i][7] + '\n')
                except IndexError:
                    pass
            await send(message.from_user.id, msg, markup='menu')
        else:
            msg = ''
            for i in range(1, len(rd)):
                try:
                    msg += str(i + 1) + ") " + rd[i][0] + ' ' + rd[i][1] + ' ' + rd[i][2] + ' ' + \
                           rd[i][3] + ' ' + rd[i][4] + ' ' + rd[i][5] + '\n'
                except IndexError:
                    pass
            await send(message.from_user.id, msg, markup='menu')
    else:
        await send(message.from_user.id, '–í —Ç–∞–±–ª–∏—Ü–µ –ø—É—Å—Ç–æ', markup='menu')


async def add_new_entry(message, state):
    try:
        tabular_data = await sheets_api.read_new('–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ä–∞–∑–¥–µ–ª—ã', db.get_id_sheets(message.from_user.id)) # –°–ø–∏—Å–æ–∫ —Å–æ —Å—Ç—Ä–æ–∫–∞–º–∏ –∏–∑ –ª–∏—Å—Ç–∞ "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ä–∞–∑–¥–µ–ª—ã", –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∏–∂–µ
    except HttpError as e:
        if 'Unable to parse range: –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ä–∞–∑–¥–µ–ª—ã' in str(e):
            await send(message.from_user.id, '‚ùóÔ∏è–ù–µ —É–¥–∞–ª–æ—Å—å –≤–Ω–µ—Å—Ç–∏ –∑–∞–ø–∏—Å—å.‚ùóÔ∏è\n –í–æ–∑–º–æ–∂–Ω–æ –≤—ã —É–¥–∞–ª–∏–ª–∏ –∏–ª–∏ '
                                             '–ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–ª–∏ –ª–∏—Å—Ç <b>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ä–∞–∑–¥–µ–ª—ã</b>. –õ–∏–±–æ –ø–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ (—Å–æ–∑–¥–∞–π—Ç–µ) —ç—Ç–æ—Ç –ª–∏—Å—Ç, '
                                             '–ª–∏–±–æ –∑–∞–Ω–æ–≤–æ –¥–æ–±–∞–≤—å—Ç–µ —Ç–∞–±–ª–∏—Ü—É –≤ –±–æ—Ç–∞, –±–æ—Ç —Å–∞–º —Å–æ–∑–¥–∞—Å—Ç –ª–∏—Å—Ç <b>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ä–∞–∑–¥–µ–ª—ã</b> \n'
                                             '<u>–í–≤–µ–¥–∏—Ç–µ /add_tables –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏</u>', markup='menu')
        elif 'Requested entity was not found' in str(e):
            await send(message.from_user.id, '‚ùóÔ∏è–í–æ–∑–º–æ–∂–Ω–æ, –≤–∞—à–∞ —Ç–∞–ª–∏—Ü–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞. ‚ùóÔ∏è\n–ó–∞–¥–∞–π—Ç–µ –±–æ—Ç—É –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É. \n'
                                             '–ü–æ–¥—Ä–æ–±–Ω–µ–µ - /add_tables', markup='menu')
        elif 'not have permission' in str(e):
            await send(message.from_user.id,
                       '–í—ã –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª–∏ –±–æ—Ç—É –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã!\n'
                       '<u>servis@new-project-336414.iam.gserviceaccount.com</u>', markup='menu')
        elif 'Internal error encountered' in str(e):
            await send(message.from_user.id, '–í–∞—à–∞ —Ç–∞–±–ª–∏—Ü–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ—á—Ç–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ', markup='menu')
        else:
            await send(message.from_user.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–æ–æ–±—â–∏—Ç–µ –∞–¥–º–∏–Ω–∞–º (/support)', markup='menu')
        print("–æ—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã, ", e)
    else:
        ''' –∑–∞–¥–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Å–æ–æ–±—â–µ–Ω–∏—è '''
        db.change_random('what', '', message.from_user.id)
        db.change_random('summ', 0, message.from_user.id)
        db.change_random('name', message.from_user.first_name, message.from_user.id)
        db.change_random('chapter', '', message.from_user.id)
        db.change_random('category', '', message.from_user.id)
        db.change_random('comment', '', message.from_user.id)
        db.change_random('string', '', message.from_user.id)
        db.change_random('time_v', '', message.from_user.id)

        await check_comment(message) # –§–æ—Ä–º–∏—Ä—É–µ–º –∏ –∑–∞–ø–æ–º–∏–Ω–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, —Å—É–º–º—É –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞–ª–∏—á–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
        await categories_match(message, tabular_data) # –ï—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∏–∑ –∑–∞–ø–∏—Å–∏ —Å–æ–≤–ø–∞–ª–∞ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ, —Å–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å

        if not db.get_random('is_stop', message.from_user.id): # –ï—Å–ª–∏ –ø—Ä–æ—à–ª–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –ø—Ä–µ—Ä–≤–∞–ª–∞—Å—å –ø–æ –æ—à–∏–±–∫–µ –∏–ª–∏ –Ω–µ –∑–∞–ø–∏—Å–∞–ª–∞ –≤ —Ç–∞–±–ª–∏—Ü—É
            await key_words_match(message, tabular_data) # –ï—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∏–∑ –∑–∞–ø–∏—Å–∏ —Å–æ–≤–ø–∞–ª–∞ —Å –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–æ–º –≤ —Ç–∞–±–ª–∏—Ü–µ, —Å–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å

            if not db.get_random('is_stop', message.from_user.id):
                await fuzzy_comparison(message, tabular_data, state)
            else:
                db.change_random('is_stop', 0, message.from_user.id)
        else:
            db.change_random('is_stop', 0, message.from_user.id)
