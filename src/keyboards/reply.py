from aiogram import types


def main_kb():
    items_main_kb = [
        [types.KeyboardButton(text="–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞üí∞")],
        [types.KeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–ø–∏—Å—å"), types.KeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")],
        [types.KeyboardButton(text="–ò—Ç–æ–≥–æ –∑–∞ –º–µ—Å—è—Ü"), types.KeyboardButton(text="–ú–æ–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ä–∞–∑–¥–µ–ª—ã")],
        # [types.KeyboardButton(text="–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏")],
        [types.KeyboardButton(text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –∑–∞–ø–∏—Å–µ–π")],
    ]

    keyboard = types.ReplyKeyboardMarkup(
            keyboard=items_main_kb,
            resize_keyboard=True,
            input_field_placeholder="–ú–µ–Ω—é"
    )
    return keyboard


def abolition_kb():
    item_abolition_kb = [
        [types.KeyboardButton(text='–û—Ç–º–µ–Ω–∞')]
    ]

    keyboard = types.ReplyKeyboardMarkup(
        keyboard=item_abolition_kb,
        resize_keyboard=True,
        input_field_placeholder='–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã'
    )
    return keyboard


def table_modification():
    item_abolition_kb = [
        [types.KeyboardButton(text='–î–∞')],
        [types.KeyboardButton(text='–ù–µ—Ç')],
        [types.KeyboardButton(text='–°—Ç–æ–ø')]
    ]

    keyboard = types.ReplyKeyboardMarkup(
        keyboard=item_abolition_kb,
        resize_keyboard=True,
        input_field_placeholder='–û—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –≤—ã—à–µ'
    )

    return keyboard

def auto_markup(*args, step=1, is_=True):
    if is_:
        item_abolition_kb = [
            [types.KeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–ª–∏ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ‚úÖ')],
            [types.KeyboardButton(text='–û—Ç–º–µ–Ω–∞')],
        ]
    else: item_abolition_kb = [[types.KeyboardButton(text='–û—Ç–º–µ–Ω–∞')]]
    # for i in range(0, len(args[0]), step)
    for arg in args[0]:
        item_abolition_kb.append([types.KeyboardButton(text=arg)])

    keyboard = types.ReplyKeyboardMarkup(
        keyboard=item_abolition_kb,
        resize_keyboard=True,
        input_field_placeholder='–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç'
    )
    return keyboard


def new_category():
    item_abolition_kb = [
        [types.KeyboardButton(text='–ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ'), types.KeyboardButton(text='–ö–∞—Ç–µ–≥–æ—Ä–∏—è')],
        [types.KeyboardButton(text='–ù–µ—Ç, –æ—Ç–º–µ–Ω–∞')],
    ]

    keyboard = types.ReplyKeyboardMarkup(
        keyboard=item_abolition_kb,
        resize_keyboard=True,
        input_field_placeholder='–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç'
    )
    return keyboard


def support():
    item_abolition_kb = [
        [types.KeyboardButton(text='–û—Ç–º–µ–Ω–∞')]
    ]

    keyboard = types.ReplyKeyboardMarkup(
        keyboard=item_abolition_kb,
        resize_keyboard=True,
        input_field_placeholder='–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ –∂–∞–ª–æ–±–∞'
    )
    return keyboard


def voice_input():
    item_abolition_kb = [
        [types.KeyboardButton(text='–û—Ç–º–µ–Ω–∞')],
        [types.KeyboardButton(text='–í–µ—Ä–Ω–æ')],
        [types.KeyboardButton(text='–ù–µ–≤–µ—Ä–Ω–æ')]
    ]

    keyboard = types.ReplyKeyboardMarkup(
        keyboard=item_abolition_kb,
        resize_keyboard=True,
        input_field_placeholder='–ì–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥'
    )
    return keyboard